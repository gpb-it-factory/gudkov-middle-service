package gudkov.miit.gudkovmiddleservice.UserRegistrationCase.Service;

import feign.FeignException;
import gudkov.miit.gudkovmiddleservice.UserRegistrationCase.Feign.BackendServiceAPI;
import jakarta.validation.Valid;
import org.openapi.example.api.V2Api;
import org.openapi.example.model.CreateUserRequestV2;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestBody;

import java.time.LocalDateTime;




/**
 * This service using objects generated by OpenAPI generator. Those files located in build/generated.
 * Current used API(declared in build.gradle file) - middle-openapi-0.1b.
 * Current version of used API - 0.1b.
 * Used OpenAPI files located in resources/OpenAPI folder
 */
@Service
public class UserRegistrationService implements V2Api {

    private static final Logger log = LoggerFactory.getLogger(UserRegistrationService.class);
    private final BackendServiceAPI backendServiceAPI;

    public UserRegistrationService(BackendServiceAPI backendServiceAPI){
        this.backendServiceAPI = backendServiceAPI;
    }

    @Override
    public ResponseEntity<Void> createUserV2(@Valid @RequestBody CreateUserRequestV2 createUserRequestV2) {
        try{
            log.info("Triggered middle service API at {}" , LocalDateTime.now());
            ResponseEntity<?> responseEntity = backendServiceAPI.createUserV2(createUserRequestV2);
            //code under this line is inaccessible due to no backend for now
            return new ResponseEntity<>(responseEntity.getStatusCode());
            //return new ResponseEntity<>(HttpStatus.NO_CONTENT);
        } catch (FeignException feignException){
            return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
        }
    }
}
